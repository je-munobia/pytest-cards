name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-workflows:
    # See: https://github.com/rhysd/actionlint/blob/main/docs/usage.md
    # See: https://github.com/devops-actions/actionlint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
      - uses: devops-actions/actionlint@v0.1.3

  format:
    runs-on: ubuntu-latest
    container:
      image: 'jexmse/python-tox:latest'

    steps:
      - uses: actions/checkout@v4
      - run: tox -e format

  lint:
    runs-on: ubuntu-latest
    container:
      image: 'jexmse/python-tox:latest'

    steps:
      - uses: actions/checkout@v4
      - run: tox -e lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Cache tox
        uses: actions/cache@v4
        with:
          path: '.tox'
          key: typecheck-3.12-${{ hashFiles('pyproject.toml', 'tox.ini') }}
          restore-keys: |
            typecheck-3.12-
      - run: pip install tox
      - run: tox -e typecheck

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pip'
      - name: Cache tox
        uses: actions/cache@v4
        with:
          path: '.tox'
          key: test-${{ matrix.python }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
          restore-keys: |
            test-${{ matrix.python }}-
      - run: pip install tox
      - run: tox -e py
